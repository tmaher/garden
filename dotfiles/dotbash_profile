PATH=$HOME/bin:$HOME/sbin:$HOME/.rbenv/bin:$HOME/.rbenv/shims
PATH=$PATH:/usr/local/bin:/usr/local/sbin
PATH=$PATH:/usr/bin:/usr/sbin:/bin/sbin
PATH=$PATH:/opt/heimdal/bin:/opt/heimdal/sbin
PATH=$PATH:/usr/kerberos/bin:/usr/kerberos/sbin:/bin:/sbin:/usr/X11R6/bin
export PATH
export PATH_NO_REALLY=$PATH

MANPATH=/usr/local/share/man:/usr/local/man:/usr/share/man
MANPATH=$MANPATH:/opt/heimdal/share/man
MANPATH=$MANPATH:/usr/man:/usr/kerberos/man:/usr/X11R6/man
export MANPATH

EDITOR=emacs
SVN_EDITOR=$EDITOR
export EDITOR
export SVN_EDITOR

export PAGER=less
export BLOCKSIZE=K

HOST_SHORT=`hostname | tr A-Z a-z | sed  -e 's/\.tursom\.org$//'`
export HOST_SHORT

if readlink /bin/sh | grep bash >/dev/null; then
  ENV="$HOME/.bashrc"
  export ENV
fi

# Cribbed from rbenv 0.4.0, 2014-12-12
# source "/usr/local/Cellar/rbenv/0.4.0/libexec/../completions/rbenv.bash"
_rbenv() {
  COMPREPLY=()
  local word="${COMP_WORDS[COMP_CWORD]}"

  if [ "$COMP_CWORD" -eq 1 ]; then
    COMPREPLY=( $(compgen -W "$(rbenv commands)" -- "$word") )
  else
    local words=("${COMP_WORDS[@]}")
    unset words[0]
    unset words[$COMP_CWORD]
    local completions=$(rbenv completions "${words[@]}")
    COMPREPLY=( $(compgen -W "$completions" -- "$word") )
  fi
}
complete -F _rbenv rbenv

rbenv rehash 2>/dev/null
rbenv() {
  typeset command
  command="$1"
  if [ "$#" -gt 0 ]; then
    shift
  fi

  case "$command" in
    rehash|shell)
    eval `rbenv "sh-$command" "$@"`;;
    *)
    command rbenv "$command" "$@";;
  esac
}

export EC2_PRIVATE_KEY="$HOME/.ec2/pk.pem"
export EC2_CERT="$HOME/.ec2/cert.pem"
if [ `uname` == 'Darwin' ]; then
  export JAVA_HOME="$(/usr/libexec/java_home)"
  export EC2_HOME="/usr/local/Cellar/ec2-api-tools/1.6.1.2/jars"
  export AWS_IAM_HOME="/usr/local/Cellar/aws-iam-tools/1.5.0/jars"
  export AWS_CREDENTIAL_FILE="/Volumes/tmprv/heroku/master-creds-for-iam-tools.txt"
fi

PGHOST="/var/pgsql_socket"; export PGHOST

krenew >/dev/null 2>&1

proxy(){
  if [ x${http_proxy} = "x" ] || [ x${SSL_CERT_FILE} = "x" ]; then
    export proxy_mode="ON"
    export SSL_CERT_FILE=${HOME}/etc/zap.pem
    export http_proxy="http://127.0.0.1:8080"
    export https_proxy=${http_proxy}
  else
    export proxy_mode="OFF"
    unset SSL_CERT_FILE
    unset http_proxy
    unset https_proxy
  fi
  echo "***************************"
  echo "PROXY MODE ${proxy_mode}"
  echo ""
  echo "SSL_CERT_FILE=${SSL_CERT_FILE:-unset}"
  echo "http_proxy=${http_proxy:-unset}"
  echo "https_proxy=${https_proxy:-unset}"
  echo "***************************"
}

. $HOME/.bashrc
